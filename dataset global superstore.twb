<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20214.21.1217.2252                               -->
<workbook original-version='18.1' source-build='2021.4.2 (20214.21.1217.2252)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (global_superstore_2016 (1))' inline='true' name='federated.0eqbkvh1qh87fw1d4djyp0ugazb2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global_superstore_2016 (1)' name='excel-direct.1yx8yvl09k2ox411bt90914jz75i'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/kavita Sharma/Downloads/global_superstore_2016 (1).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1yx8yvl09k2ox411bt90914jz75i' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='integer' name='Postal Code' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Country' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Market' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1yx8yvl09k2ox411bt90914jz75i' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='integer' name='Postal Code' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='string' name='Country' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Market' ordinal='13' />
              <column datatype='string' name='Product ID' ordinal='14' />
              <column datatype='string' name='Category' ordinal='15' />
              <column datatype='string' name='Sub-Category' ordinal='16' />
              <column datatype='string' name='Product Name' ordinal='17' />
              <column datatype='real' name='Sales' ordinal='18' />
              <column datatype='integer' name='Quantity' ordinal='19' />
              <column datatype='real' name='Discount' ordinal='20' />
              <column datatype='real' name='Profit' ordinal='21' />
              <column datatype='real' name='Shipping Cost' ordinal='22' />
              <column datatype='string' name='Order Priority' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.1yx8yvl09k2ox411bt90914jz75i' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Market]' value='[Orders].[Market]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B25:no:A1:B25:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_B4770369D71C48C6822112A15A5B2150]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_D6EF59A0B15B4604BC02733AA3A01AE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[People_D6EF59A0B15B4604BC02733AA3A01AE2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' default-format='p0.00%' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales]) / TOTAL(SUM([Sales]))'>
          <table-calc ordering-type='CellInPane' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation2]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([Profit]) / TOTAL(AVG([Profit]))'>
          <table-calc ordering-type='CellInPane' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation3]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales]) / TOTAL(SUM([Sales]))'>
          <table-calc ordering-type='CellInPane' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation4]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales]) / TOTAL(SUM([Sales]))'>
          <table-calc ordering-type='CellInPane' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation5]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2516104824171266048] / TOTAL([Calculation_2516104824171266048])'>
          <table-calc ordering-type='CellInPane' />
        </calculation>
      </column>
      <column datatype='real' default-format='p0.00%' name='[Calculation6]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales]) / TOTAL(SUM([Sales]))'>
          <table-calc ordering-type='CellInPane' />
        </calculation>
      </column>
      <column caption='profit ratio' datatype='real' name='[Calculation_2516104824171266048]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column caption='rank' datatype='integer' name='[Calculation_2516104824182030337]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='rank2' datatype='integer' name='[Calculation_2516104824198320133]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([Profit]),&apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='sales new' datatype='boolean' name='[Calculation_2516104824199098374]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Sales]&gt;5000' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column aggregation='None' caption='Sales (bin)' datatype='integer' name='[Sales (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='3' formula='[Sales]' peg='0' size='1000' />
      </column>
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_B4770369D71C48C6822112A15A5B2150]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_D6EF59A0B15B4604BC02733AA3A01AE2]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Orders_B4770369D71C48C6822112A15A5B2150]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_B4770369D71C48C6822112A15A5B2150:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[People_D6EF59A0B15B4604BC02733AA3A01AE2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:People_D6EF59A0B15B4604BC02733AA3A01AE2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Avg' name='[avg:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Shipping Cost]' derivation='Sum' name='[sum:Shipping Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation2]' derivation='User' name='[usr:Calculation2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation3]' derivation='User' name='[usr:Calculation3:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation4]' derivation='User' name='[usr:Calculation4:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation5]' derivation='User' name='[usr:Calculation5:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation6]' derivation='User' name='[usr:Calculation6:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation_2516104824171266048]' derivation='User' name='[usr:Calculation_2516104824171266048:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2516104824182030337]' derivation='User' name='[usr:Calculation_2516104824182030337:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Region:nk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_2516104824182030337]' derivation='User' name='[usr:Calculation_2516104824182030337:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Field'>
          <order field='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Region:nk]' />
          <order field='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]' />
        </table-calc>
      </column-instance>
      <column-instance column='[Calculation_2516104824182030337]' derivation='User' name='[usr:Calculation_2516104824182030337:qk:3]' pivot='key' type='quantitative'>
        <table-calc ordering-type='CellInPane' />
      </column-instance>
      <column-instance column='[Calculation_2516104824182030337]' derivation='User' name='[usr:Calculation_2516104824182030337:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_2516104824182030337]' derivation='User' name='[usr:Calculation_2516104824182030337:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-type='PaneCol' />
      </column-instance>
      <column-instance column='[Calculation_2516104824182030337]' derivation='User' name='[usr:Calculation_2516104824182030337:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_2516104824198320133]' derivation='User' name='[usr:Calculation_2516104824198320133:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Customer Name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Andrew Allen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Anna Häberlin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ashley Jarboe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Astrea Jones&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Becky Pak&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Christina Anderson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Darrin Martin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;David Bremer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elizabeth Moffitt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eric Hoffmann&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Erica Hernandez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eugene Moren&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frank Gastineau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fred Hopkins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;George Ashbrook&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guy Thornton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hunter Glantz&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jeremy Farry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Joe Elijah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Joe Kamberova&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Joseph Holt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Katherine Ducich&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Keith Herrera&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liz Carlisle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liz Willingham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luke Schmidt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luke Weiss&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Nguyen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mike Kennedy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philip Brown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Phillina Ober&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Phillip Breyer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quincy Jones&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sam Craven&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sanjit Jacobs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stefanie Holloman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stewart Carmichael&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ted Trevino&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Toby Ritter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tom Zandusky&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bill Donatelli&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bobby Elias&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bryan Mills&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carl Jackson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carl Weiss&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carol Adams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dan Reichenbach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dario Medina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dave Poirier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;David Wiener&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dennis Bolton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Erica Hackney&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Erica Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gene Hale&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jay Kimmel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jennifer Ferguson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jim Karlsson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Julie Creighton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Justin Ritter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kai Rey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karen Bern&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Karl Braun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lisa Ryan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mathew Reese&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Melanie Seite&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mike Vittorini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Naresj Patel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nick Radford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nicole Fjeld&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nona Balk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philisse Overcash&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rick Reed&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rob Beeghly&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Robert Waldorf&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russell D&apos;Ascenzo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sung Chung&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Susan MacKendrick&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Susan Pistek&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tamara Dahlen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yana Sorensen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Adam Hart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alan Dominguez&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Allen Goldenen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alyssa Crouse&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amy Cox&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andy Gerbode&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anthony O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barry Franz&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chuck Magee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cindy Stewart&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Craig Reiter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dennis Pardue&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ed Jacobs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Erin Mull&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guy Armstrong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harold Engle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Janet Martin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Janet Molinari&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Juliana Krohn&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Katherine Nockton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Maria Etezadi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michael Granlund&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Natalie Webber&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Neil Ducich&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Neil Französisch&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pamela Coakley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pamela Stobb&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patrick Gardner&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Patrick Jones&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paul Gonzalez&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paul Van Hugh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Penelope Sewall&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ricardo Emerson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Speros Goranitis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sung Shariari&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanja Norvell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thea Hendricks&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Theresa Swint&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tiffany House&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tonja Turnell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aaron Bergman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alan Barnes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Beth Paige&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brendan Sweed&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brian Dahlen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brian Derr&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brian Thompson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carl Ludwig&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chloris Kastensmidt&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christopher Conant&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Clay Rozendal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cynthia Arntzen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyra Reiten&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Daniel Byrd&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ellis Ballard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Filia McAdams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fred Harton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grant Thornton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Henia Zydlo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jesus Ocampo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jill Fjeld&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Joni Sundaresam&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Katrina Edelman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ken Brennan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laura Armstrong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Magdelene Morse&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marc Crier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mary O&apos;Rourke&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mary Zewe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michael Paige&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Neoma Murray&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pete Armstrong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pete Kriz&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rick Hansen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roland Schwarz&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ross Baird&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sally Knutson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Skye Norling&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sylvia Foulston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Troy Staebel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adrian Hane&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allen Armold&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anthony Jacobs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bill Overfelt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brendan Murry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bruce Degenhardt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bryan Spruell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cassandra Brandow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cathy Prescott&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Charles McCrossin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christopher Martinez&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cindy Schnelling&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Damala Kotsonis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dianna Wilson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dorothy Dickinson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ed Ludwig&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;James Lanier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jim Sink&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Joel Eaton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Julie Kriz&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Larry Tron&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lisa Hazard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mark Cousins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Matthew Grinstein&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michelle Lonsdale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mick Hernandez&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Natalie Fritzler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nathan Mautz&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Patrick O&apos;Brill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Shahid Shariari&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sheri Gordon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thea Hudgings&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thomas Seio&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thomas Thornton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tim Brockman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tim Taslimi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Toby Braunhardt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Victoria Brennan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;William Brown&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zuschuss Donatelli&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anna Chung&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barry Französisch&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ben Ferrer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ben Peterman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bobby Odegard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bradley Talbott&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dean Braden&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dennis Kane&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Emily Ducich&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eric Barreto&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eudokia Martin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evan Minnotte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gene McClure&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Heather Kirkland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Henry Goldwyn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jim Radford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;John Murray&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Joy Daniels&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ken Lonsdale&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laurel Beltran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lela Donovan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MaryBeth Skach&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Matt Collister&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Max Jones&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michael Kennedy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michael Moore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michael Oakman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michelle Ellison&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nick Crebassa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philip Fox&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rick Bensley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rick Huthwaite&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roy Collins&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sally Hughsby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanjit Engle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shahid Collister&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shahid Hopkins&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shaun Chance&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Susan Gilcrest&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vivek Gonzalez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alejandro Ballentine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Andrew Gjertsen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Andy Yotov&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Annie Thurman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barry Weirich&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bart Folk&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Beth Fritzler&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bill Eplett&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bill Stewart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bradley Nguyen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Claire Gute&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dave Brooks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dave Kipp&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Don Miller&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Edward Becker&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erin Ashbrook&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eva Jacobs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Giulietta Baptist&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greg Matthias&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harold Ryan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamie Frazer&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jennifer Braxton&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jocasta Rupert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joel Jenkins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;John Grady&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Justin Hirsh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Katherine Hughes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Katrina Willman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laurel Workman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Logan Currie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maria Zettner&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maureen Gnade&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Noel Staavos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Paul MacIntyre&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Randy Bradley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rob Dowd&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roland Fjeld&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roland Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Scott Williamson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adrian Shami&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alan Haines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bart Pistole&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caroline Jumper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charles Sheldon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Christina DeMoss&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;David Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deirdre Greer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Don Weiss&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ed Braxton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erica Bern&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greg Hansen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Henry MacAllister&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ionia McGrath&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jessica Myrick&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;John Dryer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;John Huston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joni Wasserman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joy Bell-&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kalyca Meade&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Katharine Harms&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kelly Andreada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maria Bertelson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mark Hamilton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mick Brown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Parhena Norris&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pauline Chand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pauline Johnson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rachel Payne&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ralph Arnett&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Raymond Buch&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rick Duston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sandra Glassco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sarah Brown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sonia Sunley&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steve Nguyen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tracy Blumstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vicky Freymann&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vivian Mathis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ann Blume&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ann Steele&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Art Ferguson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Benjamin Farhat&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Berenike Kampe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carlos Soltero&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Christine Phan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Craig Carreira&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Daniel Lacy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;David Philippe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eileen Kiefer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heather Jas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hilary Holden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Irene Maddox&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jack Garza&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamie Kunitz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Janet Lee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jason Fortune-&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jim Kriz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John Lucas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Julia Dunbar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kelly Collister&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kimberly Carter&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kunst Miller&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lindsay Castell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Maxwell Schwartz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mike Caudle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nancy Lomonaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nat Carroll&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Noah Childs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pierre Wener&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raymond Messe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rob Williams&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Robert Marley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russell Applegate&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sarah Bern&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Scot Coram&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sean O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ted Butterfield&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angele Hood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ann Chong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Arthur Prichep&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brad Eason&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brad Thomas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Candace McMahon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carlos Daly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Triggs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chad Sievert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cindy Chapman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Craig Carroll&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dan Campbell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dan Lawera&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dave Hallsten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eugene Hildebrand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gary Mitchum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hunter Lopez&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jason Klamczynski&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kean Nguyen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keith Dawkins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ken Heidel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kristina Nunn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marina Lichtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mark Packer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Matt Connell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Matthew Clasen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mike Gockenbach&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mike Pelletier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nat Gilpin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicole Brennan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ritsa Hightower&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rob Haberlin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ross DeVincentis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ruben Ausman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ryan Akin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sue Ann Reed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tamara Manning&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Todd Boyes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tom Stivers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tony Sayre&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anna Gayman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anthony Witt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arianne Irving&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bill Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bobby Trafton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brian DeCherney&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cathy Hwang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christine Kargatis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Christopher Schild&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Craig Yedwab&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daniel Raglin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Darren Koutras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Delfina Latchford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edward Hooks&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eleni McCrary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fred Wasserman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Zandusky&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;George Bell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greg Tran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Helen Abelman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jack Lebron&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jason Gross&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jeremy Ellison&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joni Blumstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kristen Hastings&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laurel Elliston&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Logan Haushalter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maribeth Dona&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michelle Huthwaite&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nathan Gelder&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Neil Knudson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paul Knutson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peter Bühler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Randy Ferguson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Resi Pölking&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sam Zeldin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saphhira Shifley&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stephanie Phelps&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Valerie Dominguez&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Valerie Takahito&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alex Avila&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anna Andreadi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arthur Gainer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bryan Davis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chad Cunningham&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chris Cortes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Claudia Bergmann&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Darrin Van Huff&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denise Monton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dianna Vittorini&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Duane Noonan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Emily Burns&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eric Murdock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fred Chung&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Giulietta Dortch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guy Phonely&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hallie Redmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Helen Andreada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ivan Liston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jack O&apos;Briant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jennifer Jackson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kelly Lampkin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ken Black&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Larry Blacks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maris LaWare&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Max Engle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michael Stewart&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nick Zandusky&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nicole Hansen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nora Pelletier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Patricia Hirasaki&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pauline Webber&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pete Takahito&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rick Wilson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seth Vernon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shaun Weien&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stephanie Ulpright&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Steven Roelle&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tamara Chand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thomas Brumley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Adam Shillingsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alice McCarthy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alyssa Tate&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anne McFarland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Christine Sundaresam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Christy Brittain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Craig Molinari&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dean percer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denise Leinenbach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denny Blanton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dianna Arnett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Don Jones&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Evan Henry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grace Kelly&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harold Pawlan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harry Marie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ken Dana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindsay Shagiari&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lisa DeCherney&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mark Van Huff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maya Herman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Michelle Moray&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nora Paige&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Patrick Ryan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roy Phan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ruben Dartt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sarah Jordon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sean Braxton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shirley Jackson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sibella Parks&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sonia Cooley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stefania Perrino&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Theresa Coyne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thomas Boland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tom Prescott&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tracy Zic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Victoria Wilson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vivek Grady&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Xylona Preis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Aleksandra Gannaway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Andy Reiter&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barry Gonzalez&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ben Wallace&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brendan Dodson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brian Moss&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cyma Kinney&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;David Flashing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deborah Brumfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Denny Ordway&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dionis Lloyd&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Duane Benoit&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eugene Barchas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Frank Atkinson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Frank Merwin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fred McMath&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gary Hansen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Helen Wasserman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;James Galang&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jim Epp&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jonathan Doherty&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Julia Barnett&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Julia West&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kelly Williams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lena Radford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liz Pelletier&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Matt Hagelstein&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maurice Satty&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Neola Schneider&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paul Prost&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Phillip Flathmann&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sandra Flanagan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scot Wooten&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shirley Daniels&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steven Ward&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suzanne McNair&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Theone Pippenger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tracy Hopkins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zuschuss Carroll&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alejandro Savely&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alex Grayson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andrew Roberts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barbara Fisher&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Barry Pond&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bart Watters&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Becky Martin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bill Shonely&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bruce Stewart&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clay Ludtke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cynthia Voltz&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Darrin Sayre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Deanra Eno&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denny Joy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Erin Creighton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Erin Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frank Preis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia Rosenberg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greg Maxwell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jennifer Patt&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jonathan Howell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kean Takahito&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lena Cacioppo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lynn Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Matt Abelman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maureen Fritzler&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Grace&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michelle Tran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richard Eichhorn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rose O&apos;Brian&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Roy Französisch&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Roy Skaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stuart Calhoun&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Toby Gnade&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Toby Swindell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tom Boeckenhauer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tony Molinari&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Troy Blackwell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Victor Preis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yoseph Carroll&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aimee Bixby&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alan Schoenberger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anthony Garverick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arthur Wiediger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carol Darley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Christina VanderZanden&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chuck Clark&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Corinna Mitchell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cynthia Delaney&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Darren Budd&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Doug O&apos;Connell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Evan Bailliet&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frank Carlisle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gary McGarr&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Giulietta Weimer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harry Greene&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jane Waco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jennifer Halladay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jeremy Lonsdale&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jill Matthias&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Justin MacKendrick&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meg Tillman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Chen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Dominguez&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mick Crebagga&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mitch Willingham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Muhammed MacIntyre&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olvera Toch&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richard Bierner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Robert Barroso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sample Company A&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sanjit Chand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sara Luxemburg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sean Christensen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sharelle Roach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Steve Chapman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stewart Visinsky&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sung Pak&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Toby Carlisle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Victoria Pisteka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aaron Hawkins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alejandro Grove&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alex Russell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Allen Rosenblatt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Annie Zypern&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Art Foster&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bradley Drucker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cari MacIntyre&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Catherine Glotzbach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cathy Armstrong&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris McAfee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris Selesnick&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Christine Abelman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;David Kendrick&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dean Katz&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dorothy Wardle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dorris liebe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elpida Rittenbach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Frank Hawley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;George Zrebassa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ivan Gibson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jasper Cacioppo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jill Stevenson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;John Lee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Justin Ellison&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Karen Daniels&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Khloe Miller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Larry Hughes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Linda Cazamias&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liz MacKendrick&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Meg O&apos;Connel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mitch Webber&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Muhammed Lee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Muhammed Yedwab&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paul Stevenson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peter McVee&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ralph Kennedy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shui Tom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Stuart Van&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trudy Glocke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Adrian Barton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alan Hwang&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anemone Ratner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anne Pryor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anthony Rawles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Becky Castell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benjamin Patterson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Benjamin Venier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brenda Bowman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brooke Gillingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brosina Hoffman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cari Sayre&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charles Crestani&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chuck Sachs&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clay Cheatham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Craig Leslie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Debra Catini&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Doug Bickford&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edward Nazzal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greg Guthrie&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Herbert Flentye&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jay Fein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jim Mitchum&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John Stevenson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Julie Prescott&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karen Carlisle&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karen Ferguson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kean Thornton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lauren Leatherbury&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liz Preis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marc Harrigan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Matt Collins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maureen Gastineau&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ralph Ritter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sally Matthias&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Scott Cohen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Susan Vittorini&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tamara Willingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tom Ashbrook&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trudy Schmidt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aaron Smayling&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Adam Bellavance&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amy Hunt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Barry Blumstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brian Stugart&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bruce Geld&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cari Schnelling&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chad McGuire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charlotte Melton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Corey-Lock&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Darren Powers&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dorothy Badders&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Doug Jacobs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Duane Huffman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frank Olsen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gary Hwang&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jeremy Pistek&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joseph Airdo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Justin Deggeller&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liz Thompson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lori Olson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lycoris Saunders&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monica Federle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nathan Cano&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Odella Nelson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Patrick Bzostek&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rob Lucas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Robert Dilbeck&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sarah Foster&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sean Miller&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sean Wendt&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steve Carroll&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steven Cartwright&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Thais Sissman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Todd Sumrall&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tracy Collins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tracy Poddar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trudy Brown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Valerie Mitchum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vivek Sundaresam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alan Shonely&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beth Thompson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brad Norvell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carlos Meador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clytie Kelty&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corey Catlett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corey Roper&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dana Kaydos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Emily Grady&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Emily Phan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harold Dahlen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jas O&apos;Carroll&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jenna Caffey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John Castell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Joy Smith&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Karen Seio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katherine Murray&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Katrina Bavinger&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lena Creighton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lena Hernandez&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Linda Southworth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lindsay Williams&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luke Foster&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maribeth Schnelling&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maribeth Yedwab&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mark Haberlin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Max Ludwig&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michelle Arnett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mitch Gastineau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Natalie DeCherney&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nora Preis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Patrick O&apos;Donnell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paul Lucas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peter Fuller&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ricardo Sperren&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roger Barcio&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roger Demir&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ryan Crowe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shirley Schmidt&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tony Chapman&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Shipping Cost:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[avg:Profit:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation4:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation1:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[__tableau_internal_object_id__].[cnt:People_D6EF59A0B15B4604BC02733AA3A01AE2:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation_2516104824198320133:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation5:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation6:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation2:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation_2516104824182030337:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation_2516104824182030337:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation_2516104824182030337:qk:3]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation_2516104824182030337:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation_2516104824182030337:qk:5]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation_2516104824182030337:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation_2516104824171266048:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation3:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[__tableau_internal_object_id__].[cnt:Orders_B4770369D71C48C6822112A15A5B2150:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Market' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Calculation_2516104824199098374' />
        <field-sort-custom-order field='Calculation_2516104824198320133' />
        <field-sort-custom-order field='Calculation_2516104824182030337' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Shipping Cost' />
        <field-sort-custom-order field='Order Priority' />
        <field-sort-custom-order field='Sales (bin)' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_B4770369D71C48C6822112A15A5B2150'>
            <properties context=''>
              <relation connection='excel-direct.1yx8yvl09k2ox411bt90914jz75i' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:X10001:no:A1:X10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='integer' name='Postal Code' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Country' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Market' ordinal='13' />
                  <column datatype='string' name='Product ID' ordinal='14' />
                  <column datatype='string' name='Category' ordinal='15' />
                  <column datatype='string' name='Sub-Category' ordinal='16' />
                  <column datatype='string' name='Product Name' ordinal='17' />
                  <column datatype='real' name='Sales' ordinal='18' />
                  <column datatype='integer' name='Quantity' ordinal='19' />
                  <column datatype='real' name='Discount' ordinal='20' />
                  <column datatype='real' name='Profit' ordinal='21' />
                  <column datatype='real' name='Shipping Cost' ordinal='22' />
                  <column datatype='string' name='Order Priority' ordinal='23' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_D6EF59A0B15B4604BC02733AA3A01AE2'>
            <properties context=''>
              <relation connection='excel-direct.1yx8yvl09k2ox411bt90914jz75i' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B25:no:A1:B25:0' header='yes' outcome='2'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_B4770369D71C48C6822112A15A5B2150' />
            <second-end-point object-id='People_D6EF59A0B15B4604BC02733AA3A01AE2' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='10.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>10.1 Use order date and drill down the information for quarter and month level separately and show the line chart in a continuous form.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global_superstore_2016 (1))' name='federated.0eqbkvh1qh87fw1d4djyp0ugazb2' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqbkvh1qh87fw1d4djyp0ugazb2'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>(([federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[mn:Order Date:ok] / [federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[qr:Order Date:ok]) * [federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{83AEF40B-1E55-4B60-A8AB-4850C4121467}' />
    </worksheet>
    <worksheet name='2.4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>2. 4</run>
            <run>Æ </run>
            <run bold='true'>which customer is having maximum of the sales in the year 2012?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global_superstore_2016 (1))' name='federated.0eqbkvh1qh87fw1d4djyp0ugazb2' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqbkvh1qh87fw1d4djyp0ugazb2'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Max' name='[max:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[max:Sales:qk]' included-values='in-range' />
          <filter class='categorical' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]</column>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[max:Sales:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[max:Sales:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[max:Sales:qk]' />
              <color column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[max:Sales:qk]' />
              <text column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Customer Name:nk]' />
              <text column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A47A20DD-F278-41A9-8F00-142015AC416A}' />
    </worksheet>
    <worksheet name='3.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>3.1 W</run>
            <run bold='true'>hich western country in EMEA region has the least profit percentage?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global_superstore_2016 (1))' name='federated.0eqbkvh1qh87fw1d4djyp0ugazb2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0eqbkvh1qh87fw1d4djyp0ugazb2'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[Country]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Region:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central Africa&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Central Asia&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Eastern Africa&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Eastern Europe&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;North Africa&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Northern Europe&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Southern Africa&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Southern Europe&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Western Africa&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Western Asia&quot;' />
              <groupfilter function='member' level='[none:Region:nk]' member='&quot;Western Europe&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Region:nk]</column>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Country:nk]' />
              <size column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[pcto:sum:Profit:qk:2]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Region:nk] * [federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[Latitude (generated)])</rows>
        <cols>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{836D7272-EA74-4FDF-AF1E-E07B06A8DCB7}' />
    </worksheet>
    <worksheet name='5.1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>5.1 How can you show two different graphs in one view?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global_superstore_2016 (1))' name='federated.0eqbkvh1qh87fw1d4djyp0ugazb2' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqbkvh1qh87fw1d4djyp0ugazb2'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Profit:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[:Measure Names]' />
              <text column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]' />
              <tooltip column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.92254143953323364' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk] + [federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Profit:qk])</rows>
        <cols>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{66BDB31E-E326-476E-92C1-ED1076B9D783}' />
    </worksheet>
    <worksheet name='6.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>6.2 Create a histogram showing a no. of sales using sales bins of $1000. Which bins have profit ratios of more than 25%?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global_superstore_2016 (1))' name='federated.0eqbkvh1qh87fw1d4djyp0ugazb2' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqbkvh1qh87fw1d4djyp0ugazb2'>
            <column caption='profit ratio' datatype='real' name='[Calculation_2516104824171266048]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order ID]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column aggregation='None' caption='Sales (bin)' datatype='integer' name='[Sales (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='3' formula='[Sales]' peg='0' size='1000' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order ID]' derivation='CountD' name='[ctd:Order ID:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales (bin)]' derivation='None' name='[none:Sales (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_2516104824171266048]' derivation='User' name='[pcto:usr:Calculation_2516104824171266048:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='CellInPane' type='PctTotal' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[pcto:usr:Calculation_2516104824171266048:qk]' value='12' />
            <format attr='font-weight' field='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[pcto:usr:Calculation_2516104824171266048:qk]' value='bold' />
            <format attr='color' field='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[pcto:usr:Calculation_2516104824171266048:qk]' value='#b6992d' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Sales (bin):ok]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[pcto:usr:Calculation_2516104824171266048:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[ctd:Order ID:qk]</rows>
        <cols>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Sales (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[Sales (bin)]</column>
        </show-full-range>
        <percentages enabled='true' mode='cell-in-pane' />
      </table>
      <simple-id uuid='{72E25F30-ADA7-461E-BE73-66AEB10530C0}' />
    </worksheet>
    <worksheet name='6.4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>6.4 Using order sheet, build a scatter plot, showing the sum of sales on the x-axis and sum of profits on the y-axis for all products(product name). What is the equation for linear regression for products in technology?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global_superstore_2016 (1))' name='federated.0eqbkvh1qh87fw1d4djyp0ugazb2' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqbkvh1qh87fw1d4djyp0ugazb2'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Technology&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Category:nk]</column>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Product Name:nk]' />
              <lod column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Category:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Profit:qk]</rows>
        <cols>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{E1B88930-E791-4CFF-A537-CBF2E1A26B3B}' />
    </worksheet>
    <worksheet name='7.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>7.2 Regionwise, yearwise sales are ranked. What is the rank of some country when compared to last year?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global_superstore_2016 (1))' name='federated.0eqbkvh1qh87fw1d4djyp0ugazb2' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqbkvh1qh87fw1d4djyp0ugazb2'>
            <column caption='rank' datatype='integer' name='[Calculation_2516104824182030337]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2516104824182030337]' derivation='User' name='[usr:Calculation_2516104824182030337:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field'>
                <order field='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]' />
                <order field='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Region:nk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_2516104824182030337]' derivation='User' name='[usr:Calculation_2516104824182030337:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Region:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Central Asia&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Southern Africa&quot;</bucket>
              <bucket>&quot;Eastern Africa&quot;</bucket>
              <bucket>&quot;Central Africa&quot;</bucket>
              <bucket>&quot;Western Africa&quot;</bucket>
              <bucket>&quot;North Africa&quot;</bucket>
              <bucket>&quot;Eastern Europe&quot;</bucket>
              <bucket>&quot;Western Asia&quot;</bucket>
              <bucket>&quot;Caribbean&quot;</bucket>
              <bucket>&quot;Southern US&quot;</bucket>
              <bucket>&quot;Central US&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Southern Europe&quot;</bucket>
              <bucket>&quot;Northern Europe&quot;</bucket>
              <bucket>&quot;Eastern US&quot;</bucket>
              <bucket>&quot;Western US&quot;</bucket>
              <bucket>&quot;Southern Asia&quot;</bucket>
              <bucket>&quot;Southeastern Asia&quot;</bucket>
              <bucket>&quot;Eastern Asia&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;Central America&quot;</bucket>
              <bucket>&quot;Western Europe&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation_2516104824182030337:qk:7]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Region:nk]</rows>
        <cols>([federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok] * [federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[usr:Calculation_2516104824182030337:qk:6])</cols>
      </table>
      <simple-id uuid='{2B9C10B1-0E01-4233-939A-D12DB243225F}' />
    </worksheet>
    <worksheet name='8.2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='16'>8.2 Create a list of top 10 products based on profits whose sales value is &gt;$5000?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global_superstore_2016 (1))' name='federated.0eqbkvh1qh87fw1d4djyp0ugazb2' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqbkvh1qh87fw1d4djyp0ugazb2'>
            <column caption='sales new' datatype='boolean' name='[Calculation_2516104824199098374]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Sales]&gt;5000' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2516104824199098374]' derivation='None' name='[none:Calculation_2516104824199098374:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Calculation_2516104824199098374:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter expression='SUM([Sales]) &gt; 5000.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='member' level='[none:Calculation_2516104824199098374:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Product Name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Product Name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Apple Smart Phone, with Caller ID&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Canon Wireless Fax, Laser&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Chromcraft Conference Table, Fully Assembled&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cisco Smart Phone, Cordless&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Cubify CubeX 3D Printer Triple Head Print&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;GBC DocuBind P400 Electric Binding System&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hamilton Beach Stove, Silver&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hewlett Packard LaserJet 3310 Copier&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;High Speed Automatic Electric Letter Opener&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hon Executive Leather Armchair, Adjustable&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hon Executive Leather Armchair, Black&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hoover Stove, Red&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ibico EPK-21 Electric Binding System&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;KitchenAid Refrigerator, Black&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Lexmark MX611dhe Monochrome Laser Printer&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Motorola Smart Phone, Cordless&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Motorola Smart Phone, Full Size&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nokia Smart Phone, Cordless&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nokia Smart Phone, Full Size&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nokia Smart Phone, with Caller ID&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;SAFCO Executive Leather Armchair, Black&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sauder Classic Bookcase, Metal&quot;' />
                <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Sauder Classic Bookcase, Traditional&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Product Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Calculation_2516104824199098374:nk]</column>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Product Name:nk]</column>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Profit:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]' value='C1033%' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Product Name:nk]</rows>
        <cols>([federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk] + [federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Profit:qk])</cols>
      </table>
      <simple-id uuid='{6F178D72-54D7-49CB-B411-CE10C25EF8B1}' />
    </worksheet>
    <worksheet name='8.3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>8.3 create a chart with customer name and profit and check for the sales value for top 15 customer?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global_superstore_2016 (1))' name='federated.0eqbkvh1qh87fw1d4djyp0ugazb2' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqbkvh1qh87fw1d4djyp0ugazb2'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Customer Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Bart Watters&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Christopher Conant&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Fred Hopkins&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Greg Tran&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Hunter Lopez&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Jane Waco&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Muhammed Yedwab&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Natalie Fritzler&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Penelope Sewall&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Peter Fuller&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Raymond Buch&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sanjit Engle&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Sean Miller&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tamara Chand&quot;' />
              <groupfilter function='member' level='[none:Customer Name:nk]' member='&quot;Tom Ashbrook&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]' included-values='in-range'>
            <min>1401.6902399999997</min>
            <max>40488.070799999994</max>
          </filter>
          <filter class='categorical' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]</column>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Customer Name:nk]</column>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Customer Name:nk]</rows>
        <cols>([federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk] + [federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Profit:qk])</cols>
      </table>
      <simple-id uuid='{432A416B-0EE8-470A-9422-2FE0377D0A2F}' />
    </worksheet>
    <worksheet name='8.4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>8.4 Filter by year 2012, then find the sum of sales for highest subcategory.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global_superstore_2016 (1))' name='federated.0eqbkvh1qh87fw1d4djyp0ugazb2' />
          </datasources>
          <datasource-dependencies datasource='federated.0eqbkvh1qh87fw1d4djyp0ugazb2'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Category:nk]</rows>
        <cols>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{E0182634-4374-4421-B9FD-94DF9EF1DC17}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='2.4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[max:Sales:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[max:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0595C931-3BE5-4A55-B427-84B240B37D49}' />
    </window>
    <window class='worksheet' name='3.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[pcto:sum:Profit:qk:2]' type='size' />
            <card pane-specification-id='0' param='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Country:nk]</field>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9E7D6945-6E84-4C73-B7BD-84ED1954CE09}' />
    </window>
    <window class='worksheet' name='5.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[:Measure Names]' type='color' />
            <card pane-specification-id='3' param='[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B63F8DAC-E79D-4B5D-92A6-FE6FCCE0EFC8}' />
    </window>
    <window class='worksheet' name='6.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Order ID:nk]</field>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Sales (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5E4F948-4D03-4974-9C73-04E6D6E2F680}' />
    </window>
    <window class='worksheet' name='6.4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Category:nk]</field>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{73A3E616-C1E9-4849-907B-44DC9F4790A9}' />
    </window>
    <window class='worksheet' name='7.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Category:nk]</field>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Region:nk]</field>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C3BFE1B-AB17-4935-903E-CCCBB400C978}' />
    </window>
    <window class='worksheet' name='8.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[:Measure Names]</field>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Calculation_2516104824199098374:nk]</field>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F98D3FB4-9AC1-4452-B4AB-9B631F183B3C}' />
    </window>
    <window class='worksheet' name='8.3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC552020-7F9D-4AF0-B877-C83747C0FC19}' />
    </window>
    <window class='worksheet' name='8.4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[none:Category:nk]</field>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{910251AD-28A1-41A3-BE62-484B4D57E45D}' />
    </window>
    <window class='worksheet' maximized='true' name='10.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[qr:Order Date:ok]</field>
            <field>[federated.0eqbkvh1qh87fw1d4djyp0ugazb2].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F9CE2769-A23A-4E65-8472-940D28B78F68}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='10.1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2.4' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='3.1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='5.1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='6.2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='6.4' width='192'>
      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
      NP8fjJnYzYhipzwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='7.2' width='192'>
      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
      lDRlAZQpaf5/DQfZDHOimqoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='159' name='8.2' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='8.3' width='192'>
      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
    </thumbnail>
    <thumbnail height='139' name='8.4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
